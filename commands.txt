
copy a file from one computer to another via a network:
scp <path/filename> ad6813@graphic02.doc.ic.ac.uk:/path/to/destination


Scroll/navigate through output:
<your_command> | less
navigation keys when using less:
space_bar       next page
b               prev page
j               next line
k               prev line
<               first line
>               last line
/<text>         forward search for text
?<text>		backward search for text
n               next search match
N               prev search match
q               quit


Where are package configuration files stored:
(stored automatically during setup)
/usr/local/lib


Locate file:
locate file_name_substring
notice you need no wild cards, no inverted commas to locate file
containing substring.
to locate file with exactly file_name as filename:
locate 'file_name'
to locate file ending with file_name_end:
locate '*file_name_end'
to locate file starting with file_name_neg:
locate 'file_name_beg*'


Locate file with find:
find -name "text"
to separate stdout from stderr (stdout to file):
find -name "text" > temp.txt


Locate text within files:
to look in whole filesystem:
grep "text" /*
to look in a specific directory:
grep "text" /path/to/directory/*
to look in a specific directory and all its subdirectories:
grep "text" -r /path/to/directory/
notice no wildcard is needed in this case

Locate multiple words within files:
grep "word1\|word2\|word3" /path/to/files


Force copy recursively:
cp -rf target destination_directory
if this doesn't work, then your cp is aliased
move to another environment (bash, ksh, tcsh) and try again
hopefully cp won't be aliased everywhere


Extract archives:
  to unpack tar.gz aka .tgz:
tar zxvf archive_name.tgz
  to unpack tar.gz and place files in another folder:
tar zxvf archive_name.tgz -C /path/to/directory
  to unpack filename from arch.tar, create and store in dir:
tar -xf arch.tar dir/filename

  

Unzip:
unzip file.zip -d destination_folder


List running processes:
ps aux
all user processes:
ps
all processes containing substrings:
ps auwxx | grep <substring of top attribute> | grep <other substring of top attribute>


Keep process running:
http://askubuntu.com/questions/8653/how-to-keep-processes-running-after-ending-ssh-session


Disable screensaver:
gsettings set org.gnome.settings-daemon.plugins.power active false


Run parallel processes:
//this won't necessarily run parallel processes, 
//but it will achieve concurrency
tmux                            //starts a detached shell
<command that launches process> //starts a process on that shell
<hotkey: Ctrl-b d>              //returns from detached shell to home shell
tmux 
<command that launches process> //launch another process in another
<hotkey: Ctrl-b d>              //detached shell
tmux ls                         //list all detached shells
tmux a -t <tmux number>         //moves to specified detached shell


Run process in background without interruption even if logout:
nohup
example:
nohup rlwrap sicstus -l my_wol.pl < input.txt > output.txt 2>&1 &
//run sicstus with my_wol.pl consulted and execute commands in
//input.txt and redirect stderr/stdout to output.txt and place process
//in background


What is my distro:
lsb_release -cs
trusty


Uninstall:
sudo apt-get --purge remove program_name


Clean space:
sudo apt-get autoremove


Change mode of a file:
(ie change the rwx permissions) 
to give full permission:
chmod 777 filename


Okular:
okular file_name


Determine pixels in image file:
identify filename.jpg


Navigate on vim:


What's my version of scrapy:
scrapy version -v


How much RAM am I using:
free -m


PPA installation:
sudo add-apt ppa:name_of_ppa
sudo apt-get update
sudo apt-get install program_name
ppa means personal package archive


Check if a library/package is installed:
locate library_name
or, for more info
dpkg -s library_name


Which packages include a specific file:
apt-file search filename


Install any python library:
inside the uncompressed directory for the lib, enter:
sudo python setup.py install


What does apt stand for:
advanced packaging tool


What does ppa stand for:
personal package archive


view processor activity:
top
htop //looks nicer/cooler, with graphical CPU usage for each core



Launch utorrent:
http://askubuntu.com/questions/104094/how-to-install-utorrent-step-by-step


Launch gummi:
gummi filename.tex


Add plugin to emacs:
1) place myplugin.el in ~/.emacs.d/
2) add to ~/.emacs:
(add-to-list 'load-path "~/.emacs.d/")
(load "myplugin.el")
2) or if that doesn't work, instead:
(require 'myplugin)


Lynx browser:
MOVEMENT:
   Down arrow     - Highlight next topic
   Up arrow       - Highlight previous topic
   Right arrow,   - Jump to highlighted topic
   Return, Enter  - Follow selected link
   Left arrow     - Return to previous topic

SCROLLING: 
   CTRL-A         - Go to first page of the current document (Home)
   CTRL-E         - Go to last page of the current document (End)
   CTRL-B         - Scroll up to previous page (Page-Up)
   CTRL-F         - Scroll down to next page (Page-Down)

DIRED:
   d              - Download selected file
   f              - Show a full menu of options for current file

OTHER:       
   ? (or h)       - Help (this screen)
   d              - Download the current link
   g              - Goto a user specified URL or file
   p              - Print to a file, mail, printers, or other
   q              - Quit (Capital 'Q' for quick quit)
   /              - Search for a string within the current document
   V              - Go to the Visited Links Page
   z              - Cancel transfer in progress
   [backspace]    - Go to the History Page
   =  - Show info about current document, URL and link
   CTRL-R         - Reload current file and refresh the screen
   CTRL-L         - Refresh the screen
   CTRL-U         - Inside text input line or field,
                    erase input line (more input line commands)
   CTRL-G         - Cancel input or transfer

